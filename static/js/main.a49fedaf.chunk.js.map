{"version":3,"sources":["Masu.module.scss","Mochigoma.module.scss","Board.module.scss","domain/Koma.ts","constants.tsx","domain/Board.ts","store.ts","Koma.tsx","Masu.tsx","Mochigoma.tsx","Board.tsx","App.tsx","serviceWorker.ts","index.tsx","Koma.module.scss"],"names":["module","exports","KIN","characters","movements","nariMovements","FU","KYOSHA","range","map","delta","KEMA","GIN","KAKU_MOVEMENTS","concat","KAKU","HISHA_MOVEMENTS","HISHA","GYOKU","Koma","koma","sente","nari","id","this","length","consMoves","isSente","MoveKomaResult","HIRATE","allCoordinates","BOARD_SIDE","flatMap","col","row","initState","teme","holdingKoma","board","initialKomas","mochigomas","coordinatesByKomaId","reduce","curr","_","coordByKomaId","coord","moveTo","moveFrom","getCoordinateFor","putMochigoma","canMoveTo","blindlyMoveKoma","canNaru","NARI_CONFIRM","OK","NG","from","to","taken","push","mochigomaIdx","splice","takerKoma","takenKoma","takerCoord","takenCoord","moveResult","moveKoma","blindlyKomaTaken","getKoma","idx","findIndex","mochigoma","blindlyPutMochigoma","fromRow","toRow","isNari","isGote","filter","calcKikiForSingleKoma","some","Movability","checkMovability","withinBoard","NOT_OK","maybeKoma","OK_AND_STOP","getMovements","acc","colDiff","rowDiff","movability","initKiki","senteKiki","goteKiki","kiki","forEach","nariConfirmShown","AppStateContainer","state","onKomaClicked","isNariConfirmShown","getHoldingKoma","isSenteban","handleMoveKomaResult","takeKoma","setState","onMasuClicked","result","onNariConfirmClicked","toNaru","Error","naru","isGoteban","calcKiki","getSenteMochigomas","getGoteMochigomas","Container","isMovable","container","className","classnames","styles","movable","gote","holding","onClick","getCharacter","Masu","coordinate","masu","Math","min","Mochigoma","komas","k","key","Board","opts","main","table","td","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a49fedaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"masu\":\"Masu_masu__2UQdx\",\"sente-1\":\"Masu_sente-1__3nyE6\",\"gote-1\":\"Masu_gote-1__BP7kL\",\"gote-2\":\"Masu_gote-2__hyFud\",\"gote-3\":\"Masu_gote-3__2NPey\",\"gote-4\":\"Masu_gote-4__3rZwq\",\"sente-2\":\"Masu_sente-2__27Gx_\",\"sente-3\":\"Masu_sente-3__1zdzb\",\"sente-4\":\"Masu_sente-4__1i6Rk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mochigoma\":\"Mochigoma_mochigoma__1zDWF\",\"sente\":\"Mochigoma_sente__1ojD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__3TDpT\",\"nari-confirm\":\"Board_nari-confirm__257fG\",\"opts\":\"Board_opts__1G8ez\",\"main\":\"Board_main__2scwZ\",\"table\":\"Board_table__3TpPN\",\"td\":\"Board_td__2D2nn\"};","import range from \"lodash/range\";\nimport { BOARD_SIDE } from \"../constants\";\nimport { Coordinate } from \"../types\";\n\ntype ColDiff = number & { readonly neverUsed?: unique symbol };\ntype RowDiff = number & { readonly neverUsed?: unique symbol };\n\ntype Movement = [ColDiff, RowDiff];\ntype ConsequentMovements = Movement[]; // 飛車角香車のような遠い駒の利きがある駒は複数要素存在・そうでない駒は単一\n\ntype KomaDef = {\n  characters: [string] | [string, string];\n  movements: ConsequentMovements[];\n  nariMovements: ConsequentMovements[];\n};\n\nexport const createKoma = (komaDef: KomaDef, isSente: boolean) => {};\n\nexport const KIN: KomaDef = {\n  characters: [\"金\"],\n  movements: [[[0, -1]], [[-1, -1]], [[1, -1]], [[-1, 0]], [[1, 0]], [[0, 1]]],\n  nariMovements: []\n};\nexport const FU: KomaDef = {\n  characters: [\"歩\", \"と\"],\n  movements: [[[0, -1]]],\n  nariMovements: KIN.movements\n};\nexport const KYOSHA: KomaDef = {\n  characters: [\"香\", \"杏\"],\n  movements: [range(1, BOARD_SIDE).map(delta => [0, -delta])],\n  nariMovements: KIN.movements\n};\nexport const KEMA: KomaDef = {\n  characters: [\"桂\", \"圭\"],\n  movements: [[[-1, -2]], [[1, -2]]],\n  nariMovements: KIN.movements\n};\nexport const GIN: KomaDef = {\n  characters: [\"銀\", \"全\"],\n  movements: [[[0, -1]], [[-1, -1]], [[1, -1]], [[-1, 1]], [[1, 1]]],\n  nariMovements: KIN.movements\n};\nconst KAKU_MOVEMENTS = [range(1, BOARD_SIDE)\n  .map(delta => [-delta, -delta] as [ColDiff, RowDiff])]\n  .concat(\n    [range(1, BOARD_SIDE).map(delta => [delta, -delta])],\n    [range(1, BOARD_SIDE).map(delta => [-delta, delta])],\n    [range(1, BOARD_SIDE).map(delta => [delta, delta])]\n  );\nexport const KAKU: KomaDef = {\n  characters: [\"角\", \"馬\"],\n  movements: KAKU_MOVEMENTS,\n  nariMovements: KAKU_MOVEMENTS.concat([[[0, -1]]], [[[1, 0]]], [[[0, 1]]], [[[-1, 0]]]),\n};\nconst HISHA_MOVEMENTS = [range(1, BOARD_SIDE)\n  .map(delta => [0, -delta] as [ColDiff, RowDiff])]\n  .concat(\n    [range(1, BOARD_SIDE).map(delta => [delta, 0])],\n    [range(1, BOARD_SIDE).map(delta => [0, delta])],\n    [range(1, BOARD_SIDE).map(delta => [-delta, 0])],\n  );\nexport const HISHA: KomaDef = {\n  characters: [\"飛\", \"竜\"],\n  movements: HISHA_MOVEMENTS,\n  nariMovements: HISHA_MOVEMENTS.concat([[[-1, -1]]], [[[1, -1]]], [[[1, 1]]], [[[-1, 1]]])\n};\nexport const GYOKU: KomaDef = {\n  characters: [\"玉\"],\n  movements: [\n    [[0, -1]],\n    [[1, -1]],\n    [[1, 0]],\n    [[1, 1]],\n    [[0, 1]],\n    [[-1, 1]],\n    [[-1, 0]],\n    [[-1, -1]],\n  ],\n  nariMovements: []\n};\n\nexport default class Koma {\n  private static id: number = 0;\n\n  readonly id: number;\n  private nari: boolean;\n  constructor(private readonly koma: KomaDef, private sente: boolean, nari: boolean = false) {\n    this.id = Koma.id;\n    this.nari = nari;\n    Koma.id++;\n  }\n\n  getCharacter(): string {\n    return this.koma.characters.length === 1\n      ? this.koma.characters[0]\n      : this.koma.characters[this.nari ? 1 : 0];\n  }\n\n  getMovements(): ConsequentMovements[] {\n    const movements = this.nari ? this.koma.nariMovements : this.koma.movements;\n    return this.sente\n      ? movements\n      : movements.map(\n        (consMoves) => consMoves.map(([colDiff, rowDiff]) => [-colDiff, -rowDiff])\n      );\n  }\n\n  isSente(): boolean {\n    return this.sente;\n  }\n\n  isGote(): boolean {\n    return !this.isSente();\n  }\n\n  isNari(): boolean {\n    return this.nari;\n  }\n\n  naru(): void {\n    this.nari = true;\n  }\n\n  taken():void {\n    this.sente = !this.sente;\n    this.nari = false;\n  }\n\n}\n\nexport const HIRATE: [Coordinate, Koma][] = [\n  [[5, 9], new Koma(GYOKU, true)],\n  [[4, 9], new Koma(KIN, true)],\n  [[6, 9], new Koma(KIN, true)],\n  [[3, 9], new Koma(GIN, true)],\n  [[7, 9], new Koma(GIN, true)],\n  [[2, 9], new Koma(KEMA, true)],\n  [[8, 9], new Koma(KEMA, true)],\n  [[1, 9], new Koma(KYOSHA, true)],\n  [[9, 9], new Koma(KYOSHA, true)],\n  [[2, 8], new Koma(HISHA, true)],\n  [[8, 8], new Koma(KAKU, true)],\n  [[1, 7], new Koma(FU, true)],\n  [[2, 7], new Koma(FU, true)],\n  [[3, 7], new Koma(FU, true)],\n  [[4, 7], new Koma(FU, true)],\n  [[5, 7], new Koma(FU, true)],\n  [[6, 7], new Koma(FU, true)],\n  [[7, 7], new Koma(FU, true)],\n  [[8, 7], new Koma(FU, true)],\n  [[9, 7], new Koma(FU, true)],\n  [[5, 1], new Koma(GYOKU, false)],\n  [[4, 1], new Koma(KIN, false)],\n  [[6, 1], new Koma(KIN, false)],\n  [[3, 1], new Koma(GIN, false)],\n  [[7, 1], new Koma(GIN, false)],\n  [[2, 1], new Koma(KEMA, false)],\n  [[8, 1], new Koma(KEMA, false)],\n  [[1, 1], new Koma(KYOSHA, false)],\n  [[9, 1], new Koma(KYOSHA, false)],\n  [[2, 2], new Koma(KAKU, false)],\n  [[8, 2], new Koma(HISHA, false)],\n  [[1, 3], new Koma(FU, false)],\n  [[2, 3], new Koma(FU, false)],\n  [[3, 3], new Koma(FU, false)],\n  [[4, 3], new Koma(FU, false)],\n  [[5, 3], new Koma(FU, false)],\n  [[6, 3], new Koma(FU, false)],\n  [[7, 3], new Koma(FU, false)],\n  [[8, 3], new Koma(FU, false)],\n  [[9, 3], new Koma(FU, false)],\n];\n","export const BOARD_SIDE = 9;\n","import range from \"lodash/range\";\nimport { Coordinate, ColIdx, RowIdx } from \"../types\";\nimport Koma from \"./Koma\";\nimport { BOARD_SIDE } from \"../constants\";\n\nconst allCoordinates: Coordinate[] = range(1, BOARD_SIDE + 1).flatMap(\n  (col: ColIdx): Coordinate[] =>\n    range(1, BOARD_SIDE + 1).map((row: RowIdx) => [col, row])\n);\n\nconst withinBoard = ([col, row]: Coordinate): boolean => {\n  return 1 <= col && col <= BOARD_SIDE && 1 <= row && row <= BOARD_SIDE;\n};\n\nexport enum MoveKomaResult {\n  OK,\n  NG,\n  NARI_CONFIRM\n}\n\nexport default class Board {\n  private readonly board: (Koma | null)[][];\n  private readonly coordinatesByKomaId: {\n    [komaId: number]: Coordinate | \"mochigoma\";\n  };\n\n  constructor(\n    initialKomas: [Coordinate, Koma][],\n    private readonly mochigomas: Koma[]\n  ) {\n    this.board = initialKomas.reduce((board: (Koma | null)[][], curr) => {\n      const [[col, row], koma] = curr;\n      board[col][row] = koma;\n      return board;\n    }, range(BOARD_SIDE + 1).map(_ => range(BOARD_SIDE + 1).map(_ => null)));\n\n    this.coordinatesByKomaId = initialKomas.reduce(\n      (\n        coordByKomaId: { [komaId: number]: Coordinate | \"mochigoma\" },\n        [coord, koma]\n      ) => {\n        coordByKomaId[koma.id] = coord;\n        return coordByKomaId;\n      },\n      mochigomas.reduce(\n        (coordByKomaId: { [komaId: number]: \"mochigoma\" }, koma) => {\n          coordByKomaId[koma.id] = \"mochigoma\";\n          return coordByKomaId;\n        },\n        {}\n      )\n    );\n  }\n\n  getKoma([col, row]: Coordinate): Koma | null {\n    return this.board[col][row];\n  }\n\n  getCoordinateFor(koma: Koma): Coordinate | \"mochigoma\" {\n    return this.coordinatesByKomaId[koma.id];\n  }\n\n  moveKoma(koma: Koma, moveTo: Coordinate): MoveKomaResult {\n    const moveFrom = this.getCoordinateFor(koma);\n    if (moveFrom === \"mochigoma\") {\n      return this.putMochigoma(koma, moveTo);\n    }\n\n    if (this.canMoveTo(moveFrom, moveTo)) {\n      this.blindlyMoveKoma(koma, moveFrom, moveTo);\n      if (this.canNaru(koma, moveFrom, moveTo)) {\n        return MoveKomaResult.NARI_CONFIRM;\n      }\n      return MoveKomaResult.OK;\n    }\n    return MoveKomaResult.NG;\n  }\n\n  private blindlyMoveKoma(koma: Koma, from: Coordinate, to: Coordinate): void {\n    this.board[from[0]][from[1]] = null;\n    this.board[to[0]][to[1]] = koma;\n\n    this.coordinatesByKomaId[koma.id] = to;\n  }\n\n  private blindlyKomaTaken(koma: Koma): void {\n    koma.taken();\n    this.coordinatesByKomaId[koma.id] = \"mochigoma\";\n    this.mochigomas.push(koma);\n  }\n\n  private blindlyPutMochigoma(mochigomaIdx: number, coord: Coordinate): void {\n    const koma = this.mochigomas[mochigomaIdx];\n    this.board[coord[0]][coord[1]] = koma;\n    this.coordinatesByKomaId[koma.id] = coord;\n    this.mochigomas.splice(mochigomaIdx, 1);\n  }\n\n  takeKoma(takerKoma: Koma, takenKoma: Koma): MoveKomaResult {\n    const takerCoord = this.getCoordinateFor(takerKoma);\n    const takenCoord = this.getCoordinateFor(takenKoma);\n\n    if (takenCoord === \"mochigoma\" || takerCoord === \"mochigoma\") {\n      return MoveKomaResult.NG;\n    }\n\n    const moveResult = this.moveKoma(takerKoma, takenCoord);\n    if (moveResult === MoveKomaResult.NG) {\n      return MoveKomaResult.NG;\n    }\n    this.blindlyKomaTaken(takenKoma);\n    return moveResult;\n  }\n\n  putMochigoma(koma: Koma, coord: Coordinate): MoveKomaResult {\n    if (this.getKoma(coord) !== null) {\n      return MoveKomaResult.NG;\n    }\n    const idx = this.mochigomas.findIndex(\n      mochigoma => mochigoma.id === koma.id\n    );\n    if (idx < 0) {\n      return MoveKomaResult.NG;\n    }\n    this.blindlyPutMochigoma(idx, coord);\n    return MoveKomaResult.OK;\n  }\n\n  private canNaru(\n    koma: Koma,\n    [_, fromRow]: Coordinate,\n    [__, toRow]: Coordinate\n  ) {\n    return (\n      !koma.isNari() &&\n      ((koma.isSente() && (fromRow <= 3 || toRow <= 3)) ||\n        (koma.isGote() && (fromRow >= 7 || toRow >= 7)))\n    );\n  }\n\n  getSenteMochigomas(): Koma[] {\n    return this.mochigomas.filter(koma => koma.isSente());\n  }\n\n  getGoteMochigomas(): Koma[] {\n    return this.mochigomas.filter(koma => !koma.isSente());\n  }\n\n  private canMoveTo(from: Coordinate, to: Coordinate): boolean {\n    const maybeKoma = this.getKoma(from);\n    if (maybeKoma === null) {\n      return false;\n    }\n    return this.calcKikiForSingleKoma(from).some(\n      ([col, row]) => to[0] === col && to[1] === row\n    );\n  }\n\n  calcKikiForSingleKoma([col, row]: Coordinate): Coordinate[] {\n    /**\n     * Declaring Section (You don't have to read until it appears in `Procedure Section`)\n     */\n    enum Movability {\n      OK,\n      OK_AND_STOP,\n      NOT_OK\n    }\n\n    const koma = this.getKoma([col, row]);\n    if (koma === null) {\n      return [];\n    }\n\n    // This function needs to be called in order from the nearest Coordinate\n    // from the koma itself.\n    const checkMovability = (\n      koma: Koma,\n      [col, row]: Coordinate\n    ): Movability => {\n      if (!withinBoard([col, row])) {\n        return Movability.NOT_OK;\n      }\n      const maybeKoma = this.getKoma([col, row]);\n      if (maybeKoma === null) {\n        return Movability.OK;\n      }\n      if (maybeKoma.isSente() === koma.isSente()) {\n        return Movability.NOT_OK;\n      }\n      return Movability.OK_AND_STOP;\n    };\n\n    /**\n     * Procedure section\n     */\n    return koma.getMovements().reduce((acc: Coordinate[], consMoves) => {\n      consMoves.some(([colDiff, rowDiff]) => {\n        const movability = checkMovability(koma, [\n          col + colDiff,\n          row + rowDiff\n        ]);\n        if (movability === Movability.NOT_OK) {\n          return true; // break and go to next `consMoves`\n        }\n        acc.push([col + colDiff, row + rowDiff]);\n        return movability === Movability.OK_AND_STOP;\n      });\n      return acc;\n    }, []);\n  }\n\n  calcKiki(): {\n    senteKiki: number[][];\n    goteKiki: number[][];\n  } {\n    const initKiki = (): number[][] =>\n      range(BOARD_SIDE + 1).map(_ => range(BOARD_SIDE + 1).map(_ => 0));\n\n    return allCoordinates.reduce(\n      ({ senteKiki, goteKiki }, coord) => {\n        const maybeKoma = this.getKoma(coord);\n        if (maybeKoma == null) {\n          return { senteKiki, goteKiki };\n        }\n        const kiki = maybeKoma.isSente() ? senteKiki : goteKiki;\n        this.calcKikiForSingleKoma(coord).forEach(\n          ([col, row]) => kiki[col][row]++\n        );\n        return { senteKiki, goteKiki };\n      },\n      { senteKiki: initKiki(), goteKiki: initKiki() }\n    );\n  }\n}\n","import { Container } from \"unstated\";\nimport Koma, { HIRATE } from \"./domain/Koma\";\nimport { Coordinate } from \"./types\";\nimport Board, { MoveKomaResult } from \"./domain/Board\";\n\ntype State = {\n  teme: number;\n  holdingKoma: Koma | null;\n  board: Board;\n  nariConfirmShown: boolean;\n};\n\nconst initState: State = {\n  teme: 1,\n  holdingKoma: null,\n  board: new Board(HIRATE, []),\n  nariConfirmShown: false\n};\n\nexport class AppStateContainer extends Container<State> {\n  state = initState;\n\n  /**\n   * Event handlers\n   */\n  onKomaClicked = (koma: Koma) => {\n    if (this.isNariConfirmShown()) {\n      return;\n    }\n    const holdingKoma = this.getHoldingKoma();\n    if (holdingKoma === null && koma.isSente() !== this.isSenteban()) {\n      return;\n    }\n    if (holdingKoma === null) {\n      this.setState({ holdingKoma: koma });\n      return;\n    }\n    if (holdingKoma.id === koma.id) {\n      // Cancel moving this koma\n      this.setState({\n        holdingKoma: null\n      });\n      return;\n    }\n    if (holdingKoma.isSente() !== koma.isSente()) {\n      // Take this koma\n      this.handleMoveKomaResult(this.state.board.takeKoma(holdingKoma, koma));\n    }\n  };\n\n  onMasuClicked = (coord: Coordinate) => {\n    if (this.isNariConfirmShown()) {\n      return;\n    }\n    if (this.state.board.getKoma(coord) !== null) {\n      // In UI, Koma overlays Masu, so this shouldn't happen.\n      return;\n    }\n    const holdingKoma = this.getHoldingKoma();\n    if (holdingKoma === null) {\n      return;\n    }\n\n    this.handleMoveKomaResult(this.state.board.moveKoma(holdingKoma, coord));\n  };\n\n  private handleMoveKomaResult = (result: MoveKomaResult): void => {\n    switch (result) {\n      case MoveKomaResult.NG:\n        return;\n      case MoveKomaResult.NARI_CONFIRM:\n        this.setState({\n          board: this.state.board,\n          nariConfirmShown: true\n        });\n        return;\n      case MoveKomaResult.OK:\n        this.setState({\n          teme: this.state.teme + 1,\n          holdingKoma: null,\n          board: this.state.board\n        });\n        return;\n    }\n  };\n\n  onNariConfirmClicked = (toNaru: boolean) => {\n    const holdingKoma = this.getHoldingKoma();\n    if (holdingKoma === null) {\n      throw new Error(\"unexpected state\");\n    }\n    if (toNaru) {\n      holdingKoma.naru();\n    }\n    this.setState({\n      teme: this.state.teme + 1,\n      holdingKoma: null,\n      nariConfirmShown: false\n    });\n  };\n\n  /**\n   * Read methods\n   */\n  isSenteban = () => {\n    return this.state.teme % 2 === 1;\n  };\n\n  isGoteban = () => {\n    return !this.isSenteban();\n  };\n\n  isNariConfirmShown = () => {\n    return this.state.nariConfirmShown;\n  };\n\n  getHoldingKoma = () => {\n    return this.state.holdingKoma;\n  };\n\n  calcKiki = () => {\n    return this.state.board.calcKiki();\n  };\n\n  getSenteMochigomas = () => {\n    return this.state.board.getSenteMochigomas();\n  };\n\n  getGoteMochigomas = () => {\n    return this.state.board.getGoteMochigomas();\n  };\n\n  getKoma = (coord: Coordinate) => {\n    return this.state.board.getKoma(coord);\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Subscribe } from \"unstated\";\nimport KomaObj from \"./domain/Koma\";\nimport { AppStateContainer } from \"./store\";\nimport styles from \"./Koma.module.scss\";\n\ninterface Props {\n  koma: KomaObj;\n}\n\nconst isMovable = (koma: KomaObj, container: AppStateContainer) => {\n  const holdingKoma = container.getHoldingKoma();\n  if (holdingKoma) {\n    return true;\n  }\n  return (\n    (koma.isSente() && container.isSenteban()) ||\n    (koma.isGote() && container.isGoteban())\n  );\n};\n\nconst Koma: React.FC<Props> = ({ koma }) => {\n  return (\n    <Subscribe to={[AppStateContainer]}>\n      {(container: AppStateContainer) => {\n        const holdingKoma = container.getHoldingKoma();\n\n        return (\n          <div\n            className={classnames(styles.koma, {\n              [styles.movable]: isMovable(koma, container),\n              [styles.gote]: koma.isGote(),\n              [styles.holding]: holdingKoma && holdingKoma.id === koma.id\n            })}\n            onClick={() => container.onKomaClicked(koma)}\n          >\n            {koma.getCharacter()}\n          </div>\n        );\n      }}\n    </Subscribe>\n  );\n};\n\nexport default Koma;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Subscribe } from \"unstated\";\nimport Koma from \"./Koma\";\nimport KomaObj from \"./domain/Koma\";\nimport styles from \"./Masu.module.scss\";\nimport { AppStateContainer } from \"./store\";\nimport { Coordinate } from \"./types\";\n\ninterface Props {\n  koma: KomaObj | null;\n  coordinate: Coordinate;\n  senteKiki: number;\n  goteKiki: number;\n}\n\nconst MAX_KIKI = 4;\n\nconst Masu: React.FC<Props> = ({ koma, coordinate, senteKiki, goteKiki }) => {\n  return (\n    <Subscribe to={[AppStateContainer]}>\n      {(container: AppStateContainer) => {\n        return <div\n          className={classnames([\n            styles.masu,\n            styles[`sente-${Math.min(senteKiki, MAX_KIKI)}`],\n            styles[`gote-${Math.min(goteKiki, MAX_KIKI)}`]\n          ])}\n          onClick={() => {\n            container.onMasuClicked(coordinate);\n          }}\n        >\n          {koma && <Koma koma={koma} />}\n        </div>\n      }}\n    </Subscribe>\n  );\n};\n\nexport default Masu;\n","import React from 'react';\nimport classnames from 'classnames';\nimport Koma from './Koma';\nimport KomaObj from './domain/Koma';\nimport styles from './Mochigoma.module.scss';\n\ninterface Props {\n  komas: KomaObj[];\n}\n\nconst Mochigoma: React.FC<Props> = ({ komas }) => {\n  return (\n    <div className={classnames(styles.mochigoma, {\n      [styles.sente]: komas.some(k => k.isSente()),\n    })}>\n      {(komas).map((koma) => <Koma key={koma.id} koma={koma} />)}\n    </div>\n  );\n}\n\nexport default Mochigoma;\n","import React from \"react\";\nimport { Provider, Subscribe } from \"unstated\";\nimport range from \"lodash/range\";\nimport Masu from \"./Masu\";\nimport Mochigoma from \"./Mochigoma\";\nimport { BOARD_SIDE } from \"./constants\";\nimport styles from \"./Board.module.scss\";\nimport { AppStateContainer } from \"./store\";\nimport { RowIdx, ColIdx } from \"./types\";\n\nconst Board: React.FC<{}> = () => (\n  <Provider>\n    <Subscribe to={[AppStateContainer]}>\n      {(container: AppStateContainer) => {\n        const { senteKiki, goteKiki } = container.calcKiki();\n        return (\n          <div className={styles.board}>\n            <div className={styles[\"nari-confirm\"]}>\n              {container.isNariConfirmShown() && [\n                <div\n                  key=\"yes\"\n                  className={styles.opts}\n                  onClick={() => container.onNariConfirmClicked(true)}\n                >\n                  はい\n                </div>,\n                <div\n                  key=\"no\"\n                  className={styles.opts}\n                  onClick={() => container.onNariConfirmClicked(false)}\n                >\n                  いいえ\n                </div>\n              ]}\n            </div>\n            <div className={styles.main}>\n              <Mochigoma komas={container.getGoteMochigomas()} />\n              <table className={styles.table}>\n                <tbody>\n                  {range(1, BOARD_SIDE + 1).map((row: RowIdx) => (\n                    <tr key={row}>\n                      {range(1, BOARD_SIDE + 1).map((col: ColIdx) => (\n                        <td key={col} className={styles.td}>\n                          <Masu\n                            koma={container.getKoma([col, row])}\n                            coordinate={[col, row]}\n                            senteKiki={senteKiki[col][row]}\n                            goteKiki={goteKiki[col][row]}\n                          />\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <Mochigoma komas={container.getSenteMochigomas()} />\n            </div>\n          </div>\n        );\n      }}\n    </Subscribe>\n  </Provider>\n);\n\nexport default Board;\n","import React from 'react';\nimport Board from './Board';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"koma\":\"Koma_koma__3c7NS\",\"movable\":\"Koma_movable___ApCl\",\"gote\":\"Koma_gote__jzwc7\",\"holding\":\"Koma_holding__1542c\"};"],"sourceRoot":""}